<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - Email Summarizer</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        input, select {
            border: 1px solid #d1d5db;
            padding: 0.5rem;
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="min-h-screen">
        <nav class="bg-white shadow-sm">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between h-16">
                    <div class="flex items-center">
                        <h1 class="text-xl font-semibold">Email Summarizer</h1>
                    </div>
                    <div class="flex items-center">
                        <span class="text-gray-600"><%= user.email %></span>
                    </div>
                </div>
            </div>
        </nav>

        <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
            <div class="px-4 py-6 sm:px-0">
                <div class="bg-white rounded-lg shadow px-5 py-6 sm:px-6">
                    <div class="space-y-6">
                        <div>
                            <h2 class="text-lg font-medium text-gray-900">Summary Settings</h2>
                            <p class="mt-1 text-sm text-gray-500">Configure your email summary preferences.</p>
                        </div>

                        <form id="settingsForm" class="space-y-6">
                            <!-- Email Delivery Settings -->
                            <div class="border-b border-gray-200 pb-6">
                                <h3 class="text-md font-medium text-gray-900 mb-4">Email Delivery</h3>
                                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                                    <div>
                                        <label for="summaryEmail" class="block text-sm font-medium text-gray-700 mb-2">
                                            Summary Delivery Email
                                        </label>
                                        <input type="email" 
                                               name="summaryEmail" 
                                               id="summaryEmail" 
                                               value="<%= user.summaryEmail %>"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                                               required>
                                    </div>
                                    <div>
                                        <label for="deliveryTime" class="block text-sm font-medium text-gray-700 mb-2">
                                            Delivery Time
                                        </label>
                                        <input type="time" 
                                               id="deliveryTime" 
                                               name="deliveryTime" 
                                               value="<%= user.preferences?.deliveryTime ? 
                                                      String(user.preferences.deliveryTime.hours).padStart(2, '0') + ':' + 
                                                      String(user.preferences.deliveryTime.minutes).padStart(2, '0') : 
                                                      '18:00' %>"
                                               min="06:00"
                                               max="22:00"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"
                                               required>
                                    </div>
                                </div>
                            </div>

                            <!-- Email Filter Settings -->
                            <div class="border-b border-gray-200 pb-6">
                                <h3 class="text-md font-medium text-gray-900 mb-4">Email Filters</h3>
                                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            Include Categories
                                        </label>
                                        <div class="space-y-2">
                                            <div class="flex items-center">
                                                <input type="checkbox" id="primaryInbox" name="categories" value="primary" class="h-4 w-4 text-blue-600" checked>
                                                <label for="primaryInbox" class="ml-2 text-sm text-gray-700">Primary Inbox</label>
                                            </div>
                                            <div class="flex items-center">
                                                <input type="checkbox" id="socialInbox" name="categories" value="social" class="h-4 w-4 text-blue-600">
                                                <label for="socialInbox" class="ml-2 text-sm text-gray-700">Social</label>
                                            </div>
                                            <div class="flex items-center">
                                                <input type="checkbox" id="promotionsInbox" name="categories" value="promotions" class="h-4 w-4 text-blue-600">
                                                <label for="promotionsInbox" class="ml-2 text-sm text-gray-700">Promotions</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <label for="lookbackDays" class="block text-sm font-medium text-gray-700 mb-2">
                                            Include Unread Emails From Last
                                        </label>
                                        <select id="lookbackDays" name="lookbackDays" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                            <option value="1" selected>24 hours</option>
                                            <option value="2">2 days</option>
                                            <option value="3">3 days</option>
                                            <option value="7">1 week</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="flex justify-end space-x-4">
                                <button type="button"
                                        id="previewButton"
                                        class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    Preview Summary
                                </button>
                                <button type="button"
                                        id="testButton"
                                        class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    Send Test Summary
                                </button>
                                <button type="submit"
                                        class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    Save Changes
                                </button>
                            </div>
                        </form>

                        <div id="successMessage" class="hidden mt-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
                            Settings saved successfully!
                        </div>

                        <div id="previewSection" class="hidden mt-6 p-4 bg-gray-50 rounded-lg">
                            <h3 class="text-lg font-medium text-gray-900 mb-4">Summary Preview</h3>
                            <div id="previewContent" class="prose max-w-none">
                                <!-- Preview content will be inserted here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Load current settings when page loads
        window.addEventListener('load', async () => {
            try {
                const response = await fetch('/api/current-settings');
                if (response.ok) {
                    const settings = await response.json();
                    document.getElementById('summaryEmail').value = settings.summaryEmail;
                    
                    // Format the time value
                    if (settings.preferences?.deliveryTime) {
                        const hours = String(settings.preferences.deliveryTime.hours).padStart(2, '0');
                        const minutes = String(settings.preferences.deliveryTime.minutes).padStart(2, '0');
                        document.getElementById('deliveryTime').value = `${hours}:${minutes}`;
                    } else {
                        document.getElementById('deliveryTime').value = '18:00';
                    }
                    
                    document.getElementById('lookbackDays').value = settings.preferences?.lookbackDays || '1';
                    
                    // Set checkboxes
                    const categories = settings.preferences?.categories || ['primary'];
                    document.querySelectorAll('input[name="categories"]').forEach(cb => {
                        cb.checked = categories.includes(cb.value);
                    });
                }
            } catch (error) {
                console.error('Error loading settings:', error);
            }
        });

        // Preview button handler
        document.getElementById('previewButton').addEventListener('click', async () => {
            console.log('Preview button clicked');
            try {
                const response = await fetch('/api/preview-summary');
                console.log('Preview response status:', response.status);
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to generate preview');
                }
                
                const preview = await response.json();
                console.log('Preview data:', preview);
                
                const previewSection = document.getElementById('previewSection');
                const previewContent = document.getElementById('previewContent');
                
                let html = `
                    <div class="space-y-4">
                        <p><strong>Total unread emails:</strong> ${preview.totalEmails}</p>
                        <p><strong>Looking back:</strong> ${preview.lookbackDays} day(s)</p>
                        <p><strong>Categories:</strong> ${preview.categories.join(', ')}</p>
                        <p><strong>Delivery time:</strong> ${String(preview.deliveryTime.hours).padStart(2, '0')}:${String(preview.deliveryTime.minutes).padStart(2, '0')}</p>
                        <p><strong>Will be sent to:</strong> ${preview.summaryEmail}</p>
                `;

                if (preview.sampleEmails.length > 0) {
                    html += '<div class="mt-4"><strong>Sample emails:</strong></div>';
                    preview.sampleEmails.forEach(email => {
                        html += `
                            <div class="mt-2 p-3 bg-white rounded shadow-sm">
                                <p><strong>From:</strong> ${email.from}</p>
                                <p><strong>Subject:</strong> ${email.subject}</p>
                                <p><strong>Preview:</strong> ${email.snippet}</p>
                            </div>
                        `;
                    });
                } else {
                    html += '<p class="mt-4">No unread emails found in the selected categories.</p>';
                }

                html += '</div>';
                previewContent.innerHTML = html;
                previewSection.classList.remove('hidden');
            } catch (error) {
                console.error('Error generating preview:', error);
                alert('Failed to generate preview: ' + error.message);
            }
        });

        // Test button handler
        document.getElementById('testButton').addEventListener('click', async () => {
            if (confirm('Send a test summary now?')) {
                console.log('Test button clicked');
                try {
                    const response = await fetch('/api/send-test-summary', { 
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    console.log('Test response status:', response.status);

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.error || 'Failed to send test summary');
                    }

                    const result = await response.json();
                    console.log('Test result:', result);
                    alert('Test summary sent! Check your email.');
                } catch (error) {
                    console.error('Error sending test summary:', error);
                    alert('Failed to send test summary: ' + error.message);
                }
            }
        });

        // Original form submit handler
        document.getElementById('settingsForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const summaryEmail = document.getElementById('summaryEmail').value;
            const deliveryTime = document.getElementById('deliveryTime').value;
            const [hours, minutes] = deliveryTime.split(':').map(Number);
            const lookbackDays = document.getElementById('lookbackDays').value;
            const categories = Array.from(document.querySelectorAll('input[name="categories"]:checked'))
                                  .map(cb => cb.value);
            
            try {
                const response = await fetch('/api/update-preferences', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        summaryEmail,
                        deliveryTime,
                        lookbackDays,
                        categories
                    }),
                });

                if (response.ok) {
                    const successMessage = document.getElementById('successMessage');
                    successMessage.classList.remove('hidden');
                    setTimeout(() => {
                        successMessage.classList.add('hidden');
                    }, 3000);
                } else {
                    throw new Error('Failed to update settings');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to save settings. Please try again.');
            }
        });
    </script>
</body>
</html> 